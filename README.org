
* cl-libre-translate

** About
An easy to use Common Lisp binding for the Libre Translate service.

** Using

The easiest way to use this package is with the Docker configuration from [[https://github.com/LibreTranslate/LibreTranslate][Libre Translate]].

Clone the Libre Translate repo and start the service using:

#+begin_src shell
  ./run.sh --port 5001
#+end_src

Once the service has downloaded all of the language files, use the library to translate text:
#+begin_src lisp :results value
    (ql:quickload :cl-libre-translate)
    (use-package :st-json)
    (let ((result (lt:translate "This is a test!" :source "en" :target "zt")))
      (st-json:getjso "translatedText" result))
#+end_src

#+RESULTS:
: 有考驗了!

To see the supported languages:
#+begin_src lisp :results value
    (ql:quickload :cl-libre-translate)
    (lt:languages)
#+end_src

| { | code | : | en | (, name) | : | English | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | sq | (, name) | : | Albanian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ar | (, name) | : | Arabic | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | az | (, name) | : | Azerbaijani | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | eu | (, name) | : | Basque | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | bn | (, name) | : | Bengali | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | bg | (, name) | : | Bulgarian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ca | (, name) | : | Catalan | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | zh | (, name) | : | Chinese | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | zt | (, name) | : | Chinese (traditional) | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | cs | (, name) | : | Czech | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | da | (, name) | : | Danish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | nl | (, name) | : | Dutch | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | eo | (, name) | : | Esperanto | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | et | (, name) | : | Estonian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | fi | (, name) | : | Finnish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | fr | (, name) | : | French | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | gl | (, name) | : | Galician | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | de | (, name) | : | German | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | el | (, name) | : | Greek | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | he | (, name) | : | Hebrew | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | hi | (, name) | : | Hindi | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | hu | (, name) | : | Hungarian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | id | (, name) | : | Indonesian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ga | (, name) | : | Irish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | it | (, name) | : | Italian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ja | (, name) | : | Japanese | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ko | (, name) | : | Korean | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | lv | (, name) | : | Latvian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | lt | (, name) | : | Lithuanian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ms | (, name) | : | Malay | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | nb | (, name) | : | Norwegian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | fa | (, name) | : | Persian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | pl | (, name) | : | Polish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | pt | (, name) | : | Portuguese | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ro | (, name) | : | Romanian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ru | (, name) | : | Russian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | sk | (, name) | : | Slovak | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | sl | (, name) | : | Slovenian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | es | (, name) | : | Spanish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | sv | (, name) | : | Swedish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | tl | (, name) | : | Tagalog | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | th | (, name) | : | Thai | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | tr | (, name) | : | Turkish | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | uk | (, name) | : | Ukranian | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } | { | code | : | ur | (, name) | : | Urdu | (, targets) | : | [ar (, az) (, bg) (, bn) (, ca) (, cs) (, da) (, de) (, el) (, en) (, eo) (, es) (, et) (, eu) (, fa) (, fi) (, fr) (, ga) (, gl) (, he) (, hi) (, hu) (, id) (, it) (, ja) (, ko) (, lt) (, lv) (, ms) (, nb) (, nl) (, pl) (, pt) (, ro) (, ru) (, sk) (, sl) (, sq) (, sv) (, th) (, tl) (, tr) (, uk) (, ur) (, zh) (, zt)] | } |

Parameters (and a config file) can be used to configure the Libre Translate server and API keys.
#+begin_src lisp :results value
  (ql:quickload :cl-libre-translate)
  (setf lt:*libre-translate-url* "https://libretranslate.com")
  (setf lt:*api-key* "Some API key")
  (let ((result (lt:translate "This is a test!" :source "en" :target "es")))
    (st-json:getjso "translatedText" result))
#+end_src

#+RESULTS:
: ¡Esto es una prueba!

** Config file
Config settings can also be read from a JSON file pointed to by the ~lt:*config-file*~ parameter.  The
default location is in the package directory.  Only ~"url"~ and ~"api_key"~ entries are supported, and both
are optional.  The default is to not use an API key and to connect to "http://localhost:5001".

*** Example Config
#+begin_src javascript
  {
      "api_key": "SomeAPI Key",
      "url": "https://localhost:5001"
  }
#+end_src

** API Keys Untested
So far I've only used this package against a local Docker service, without API keys.  I have little use
for the API keys right now, so I don't plan to test them.  If they are not working, please let me know,
and I'll try to fix them.  A PR fixing the problem would also be welcome.

** License
ISC

Copyright (c) 2024 Jeremiah LaRocco <jeremiah_larocco@fastmail.com>

